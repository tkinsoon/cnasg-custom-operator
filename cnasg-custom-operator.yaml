---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex-user-role
rules:
- apiGroups:
  - ""
  - apps
  - autoscaling
  - batch
  - extensions
  - policy
  - rbac.authorization.k8s.io
  - storage.k8s.io
  resources:
  - componentstatuses
  - configmaps
  - cronjobs
  - daemonsets
  - deployments
  - events
  - endpoints
  - horizontalpodautoscalers
  - ingress
  - ingresses
  - jobs
  - limitranges
  - namespaces
  - nodes
  - pods
  - pods/log
  - pods/exec
  - persistentvolumes
  - persistentvolumeclaims
  - resourcequotas
  - replicasets
  - replicationcontrollers
  - secrets
  - serviceaccounts
  - services
  - statefulsets
  - storageclasses
  - clusterroles
  - roles
  verbs:
  - get
  - watch
  - list
  - create
  - delete
  - patch
- nonResourceURLs:
  - '*'
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
---
apiVersion: v1
kind: Namespace
metadata:
  name: cnasg
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnasg-custom-operator
  namespace: cnasg
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cnasg-custom-operator
subjects:
- kind: ServiceAccount
  name: cnasg-custom-operator
  namespace: cnasg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cnasg-custom-operator
  namespace: cnasg
data:
  application.properties: |
    # App Information
    app.info=CNA Custom Operator v0.1

    # DEX OIDC Provider
    dex.namespace=dex
    dex.api.group=dex.coreos.com
    dex.api.version=v1
    dex.customresource=refreshtokens
    dex.scope=Namespaced
    dex.userrole=dex-user-role
    dex.userrolebinding.prefix=dex-user-role-binding-

    # logging level
    logging.level.org.springframework=ERROR
    logging.level.com=INFO
    logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n

    ## if no active profile, default is 'default'
    ##spring.profiles.active=prod

    # root level
    #logging.level.=INFO
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cnasg-custom-operator
  namespace: cnasg
spec:
  selector:
    matchLabels:
      app: cnasg-custom-operator
  replicas: 1
  template:
    metadata:
      labels:
        app: cnasg-custom-operator
    spec:
      serviceAccountName: cnasg-custom-operator
      containers:
      - image: djsoon/cnasg-custom-operator
        name: cnasg-custom-operator
        imagePullPolicy: Always
        volumeMounts:
          - name: app-properties
            mountPath: "/config"
            readOnly: true
      volumes:
        - name: app-properties
          configMap:
            name: cnasg-custom-operator
            items:
              - key: application.properties
                path: application.properties
